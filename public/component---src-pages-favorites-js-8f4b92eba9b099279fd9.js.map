{"version":3,"sources":["webpack://melodyfy/./src/components/organisms/list-favorites/ListFavorites.js","webpack://melodyfy/./src/pages/Favorites.js"],"names":["useState","albumsCards","setAlbumsCards","isBrowser","window","useEffect","localStorage","getItem","navigate","spotifyApi","SpotifyWebApi","setAccessToken","getUserPlaylists","then","data","items","catch","e","console","error","message","Typography","variant","className","map","element","AlbumCard","key","id","imageUrl","images","url","title","name","by","owner","display_name"],"mappings":"6NAuDA,EAhDsB,WACpB,OAAsCA,cAAS,IAAxCC,EAAP,KAAoBC,EAApB,KACMC,EAA8B,oBAAXC,OA6BzB,OA3BAC,gBAAU,WACR,GAAIF,EACF,GAA6C,OAAzCG,aAAaC,QAAQ,iBAEvBC,cAAS,cACJ,CACL,IAAIC,EAAa,IAAIC,KAErBD,EAAWE,eAAeL,aAAaC,QAAQ,iBAE/CE,EACGG,mBACAC,MACC,SAAUC,GACRZ,EAAeY,EAAKC,UAEtB,YACEP,cAAS,aAGZQ,OAAM,SAAUC,GACfC,QAAQC,MAAMF,EAAEG,eAIvB,CAACjB,IAGF,gCACE,gBAACkB,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBACA,2BAASC,UAAU,oBAChBtB,EAAYuB,KAAI,SAAAC,GAAO,OACtB,gBAACC,EAAA,EAAD,CACEC,IAAKF,EAAQG,GACbC,SAAUJ,EAAQK,OAAO,GAAGC,IAC5BC,MAAOP,EAAQQ,KACfC,GAAIT,EAAQU,MAAMC,qBCpC9B,EAPkB,kBAChB,gCACE,gBAAC,IAAD,CAAKJ,MAAM,cACX,gBAAC,EAAD","file":"component---src-pages-favorites-js-8f4b92eba9b099279fd9.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { navigate } from \"gatsby\"\nimport SpotifyWebApi from \"../../../services/spotify-web-api.js\"\nimport { Typography } from \"../../atoms/typography/Typography\"\nimport AlbumCard from \"../../molecules/albumn-card/AlbumCard.js\"\nimport \"./listFavorites.scss\"\n\nconst ListFavorites = () => {\n  const [albumsCards, setAlbumsCards] = useState([])\n  const isBrowser = typeof window !== \"undefined\"\n\n  useEffect(() => {\n    if (isBrowser) {\n      if (localStorage.getItem(\"tokenSpotify\") === null) {\n        // Spotify token is required\n        navigate(\"/Login\")\n      } else {\n        let spotifyApi = new SpotifyWebApi()\n\n        spotifyApi.setAccessToken(localStorage.getItem(\"tokenSpotify\"))\n\n        spotifyApi\n          .getUserPlaylists()\n          .then(\n            function (data) {\n              setAlbumsCards(data.items)\n            },\n            function () {\n              navigate(\"/Login\")\n            }\n          )\n          .catch(function (e) {\n            console.error(e.message) // \"oh, no!\"\n          })\n      }\n    }\n  }, [isBrowser])\n\n  return (\n    <>\n      <Typography variant=\"h2\">My Favorites</Typography>\n      <section className=\"o-list-favorites\">\n        {albumsCards.map(element => (\n          <AlbumCard\n            key={element.id}\n            imageUrl={element.images[0].url}\n            title={element.name}\n            by={element.owner.display_name}\n          />\n        ))}\n      </section>\n    </>\n  )\n}\n\nexport default ListFavorites\n","import * as React from \"react\"\r\nimport Seo from \"../components/atoms/seo/seo\"\r\nimport ListFavorites from \"../components/organisms/list-favorites/ListFavorites\"\r\n\r\nconst Favorites = () => (\r\n  <>\r\n    <Seo title=\"Favorites\" />\r\n    <ListFavorites />\r\n  </>\r\n)\r\n\r\nexport default Favorites\r\n"],"sourceRoot":""}